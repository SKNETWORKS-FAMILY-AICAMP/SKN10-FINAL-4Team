"""
Django settings for goodfellow project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


#구글 로그인 설정
load_dotenv()
# GOOGLE_CLIENT_ID = os.getenv("GOOGLE_CLIENT_ID")
# GOOGLE_CLIENT_SECRET = os.getenv("GOOGLE_CLIENT_SECRET")
# RDS_HOSTNAME = os.getenv("RDS_HOSTNAME")
# RDS_DB_NAME = os.getenv("RDS_DB_NAME")
# RDS_USERNAME = os.getenv("RDS_USERNAME")
# RDS_PASSWORD = os.getenv("RDS_PASSWORD")
# RDS_PORT = os.getenv("RDS_PORT")

SECRET_KEY = "django-insecure-z#0n5lyt^32%)3m2@tj970#!5t3(2a^dsfj2upfl)obtqy*4fp"

DEBUG = True

ALLOWED_HOSTS = [".elasticbeanstalk.com", "localhost", "127.0.0.1", '*']
SITE_ID = 1


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.kakao',
    "allauth.socialaccount.providers.google",    
    'django.contrib.humanize',

    'home',
    'users',
    'influencers',
    'history',
]
SOCIALACCOUNT_LOGIN_ON_GET = True
LOGIN_REDIRECT_URL = '/landingpage'
ACCOUNT_LOGOUT_REDIRECT_URL = '/homepage'
ACCOUNT_LOGOUT_ON_GET = True
LOGIN_URL = '/accounts/login/'
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']
ACCOUNT_LOGIN_METHODS = {'email'}
MIDDLEWARE = [
    'allauth.account.middleware.AccountMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'goodfellow.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'goodfellow' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'goodfellow.wsgi.application'

AUTHENTICATION_BACKENDS = (
    # 'allauth' specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',

    # Needed to login by username in Django admin, regardless of 'allauth'
    'django.contrib.auth.backends.ModelBackend',

)

SOCIALACCOUNT_PROVIDERS = {
    'kakao': {
        'SCOPE': [
            'profile_nickname',   #sns플랫폼에 따라 달라지는 부분  #sns플랫폼에 따라 달라지는 부분
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    },
    "google": {
        "APP": {
            "client_id": os.environ["GOOGLE_CLIENT_ID"],
            "secret": os.environ["GOOGLE_CLIENT_SECRET"],
            "key": ""
        },
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
            "prompt": "select_account",
        }
    }
}

AUTH_USER_MODEL = 'users.User' 

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ["RDS_DB_NAME"],
        'USER': os.environ["RDS_USERNAME"],
        'PASSWORD': os.environ["RDS_PASSWORD"],
        'HOST': os.environ["RDS_HOSTNAME"],
        'PORT': os.environ["RDS_PORT"],
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


STATIC_ROOT = 'static'
STATIC_URL = 'static/'
# STATICFILES_DIRS = [
#     BASE_DIR / "static",  # if you have a project-level static folder
# ]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'influencers/static'),
    os.path.join(BASE_DIR, 'home/static'),
]

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

AUDIO_URL = 'influencers/tts_audio'
AUDIO_ROOT = os.path.join(BASE_DIR, 'influencers', 'tts_audio')

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_ROOT = 'static'
STATIC_URL = '/static/'
# STATICFILES_DIRS = [
#     BASE_DIR / "static",  # if you have a project-level static folder
# ]

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'influencers/static'),
    os.path.join(BASE_DIR, 'home/static'),
]
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
